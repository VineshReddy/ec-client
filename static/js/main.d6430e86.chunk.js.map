{"version":3,"sources":["reducers/authReducer.jsx","actionTypes.jsx","contexts/AuthContext.jsx","components/Loading.jsx","reducers/cartReducer.jsx","contexts/CartContext.jsx","actions/AuthActions.jsx","utilities/tokenconfig.jsx","App.js","serviceWorker.js","index.js"],"names":["state","action","type","isLoading","isAuthenticated","user","payload","localStorage","setItem","token","removeItem","Error","AuthContext","createContext","initialState","getItem","AuthContextProvider","props","useReducer","authReducer","auth","dispatch","Provider","value","children","Loading","className","products","loading","productCount","filter","product","id","length","productExists","map","quantity","item","CartContext","CartContextProvider","cartReducer","cart","config","headers","getUser","Promise","resolve","reject","axios","get","tokenConfig","then","res","catch","err","response","data","register","name","email","password","mobile","body","JSON","stringify","post","login","AuthenticatedApp","React","lazy","UnAuthenticatedApp","App","useContext","useEffect","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.d6430e86.chunk.js","sourcesContent":["import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from './../actionTypes';\n\nexport default function(state, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`)\n  }\n}\n","export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n\nexport const GET_ITEM_CART = 'GET_ITEM_CART';\nexport const ADD_ITEM_CART = 'ADD_ITEM_CART';\nexport const DELETE_ITEM_CART = 'DELETE_ITEM_CART';\nexport const CART_LOADING = 'CART_LOADING';\n\n\n","import React, { createContext, useReducer} from 'react'\nimport authReducer from './../reducers/authReducer.jsx'\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nconst AuthContextProvider = (props) => {\n  const [auth, dispatch] = useReducer(authReducer, initialState);\n  \n  return (\n    <AuthContext.Provider value={{auth, dispatch}}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContextProvider\n","import React, {useState, useEffect} from 'react'\n\nconst Loading = () => {\n  return (\n    <main className=\"flex-center rem15\">\n      Loading...\n    </main>\n\n  )\n}\n\nexport default Loading \n","\nexport default function(state, action) {\n  switch (action.type) {\n    case \"FETCH_CART\":\n      return {\n        ...state,\n        products: {},\n        loading: true\n      }\n    case \"FETCH_CART_SUCCESS\":\n      return {\n        ...state,\n        products: action.payload,\n        loading: false\n      }\n    case \"ADD_CART\":\n      const productCount = state.products.filter(product => product.id == action.payload.id).length\n      const productExists = state.products.map(product => product.id == action.payload.id? {...product, quantity: product.quantity + 1}: product)\n      return {\n        ...state,\n        products: productCount == 0? [action.payload, ...state.products]: productExists\n      }\n    case \"DEL_CART\":\n      return {\n        ...state,\n        products: state.products.filter(item => item.id !== action.payload)\n      }\n    case \"DEC_CART\":\n      return {\n        ...state,\n        products: action.payload\n      }\n    case \"INC_CART\":\n      return {\n        ...state,\n        products: action.payload \n      }\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        products: [] \n      }\n\n    default:\n      return state;\n  }\n}\n","import React, { createContext, useReducer} from 'react'\nimport cartReducer from './../reducers/cartReducer.jsx'\n\nexport const CartContext = createContext();\n\nconst initialState = \n{\n  products : [],\n  loading : false\n}\n\n\nconst CartContextProvider = (props) => {\n  const [cart, dispatch] = useReducer(cartReducer, initialState);\n  \n  return (\n    <CartContext.Provider value={{cart, dispatch}}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartContextProvider\n\n\n{/*\n  *\n  *const initialState = \n  *{\n  *  products : [\n  *  {\n  *    id:1,\n  *    name: 'Tomato asdkfj lsajfdjsjdfdsf',\n  *    image:'https://www.bigbasket.com/media/uploads/p/l/30010383_10-bb-popular-peanutsmungaphalishengdana-raw.jpg',\n  *    quantity: 2,\n  *    price: 30,\n  *    marketprice: 40,\n  *    availability: true,\n  *    brand: 'Dtej'\n  *  }, \n  *  {\n  *    id:2,\n  *    name: 'Potato',\n  *    image:'',\n  *    quantity: 2,\n  *    price: 30,\n  *    marketprice: 40,\n  *    availability: true,\n  *    brand: 'Dtej'\n  *  }\n  *  ],\n  *  loading : false\n  *}\n  *\n  *\n  *\n  */}\n","import axios from 'axios';\nimport {tokenConfig} from './../utilities/tokenconfig.jsx'\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nexport const getUser = () => {\n  return new Promise((resolve, reject)=> {\n    axios\n      .get('/api/auth/user', tokenConfig() )\n      .then(res => \n        resolve(res)\n      ).catch(err => reject(err.response.data))\n  });\n}\n\nexport const register = ({ name, email, password, mobile }) => {\n  const body = JSON.stringify({ name, email, password, mobile });\n\n  return new Promise((resolve, reject) => {\n    axios\n      .post('/api/auth/register', body, config)\n      .then(res =>\n        resolve(res)\n      ).catch(err => reject(err.response.data))\n  })\n};\n\nexport const login = ({ email, password }) => {\n  const body = JSON.stringify({ email, password });\n\n  return new Promise((resolve, reject) => {\n  axios\n    .post('/api/auth/login', body, config)\n    .then(res =>\n      resolve(res)\n    ).catch(err => reject(err.response.data))\n  })\n}\n\n\n\n","\nexport const tokenConfig = () => {\n  let config = {\n    headers: {\n      'Content-type': 'application/json'  \n    }\n  };\n\n  // If token, add to headers\n  const token = localStorage.getItem('token')\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n\n","import React, { useState, useContext, useEffect, Suspense } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport './css/App.scss'\nimport 'normalize.css'\nimport 'animate.css'\nimport {AuthContext} from './contexts/AuthContext.jsx' \nimport { getUser } from './actions/AuthActions.jsx'\nimport Loading from './components/Loading.jsx'\n\nconst AuthenticatedApp = React.lazy(() => import('./AuthenticatedApp.jsx')) \nconst UnAuthenticatedApp = React.lazy(() => import('./UnAuthenticatedApp.jsx')) \n\n\nfunction App() {\n  const {auth, dispatch} = useContext(AuthContext); \n\n  useEffect(() => {\n    let mounted = true\n    if(auth.token){\n      dispatch({type: 'USER_LOADING'})\n      getUser(auth.token).then(res => \n        dispatch({ type: 'USER_LOADED', payload: res.data})\n      )\n      .catch(err => \n        dispatch({ type: 'AUTH_ERROR' })\n      )\n    } \n    return () => mounted = false\n  }, [])\n\n\n  const { isAuthenticated, isLoading } = auth\n  return (\n  <div className=\"App\">\n    <BrowserRouter>\n      <>\n        <Suspense fallback={Loading} >\n        { \n          isLoading ? <Loading /> :\n          isAuthenticated ? <AuthenticatedApp /> : <UnAuthenticatedApp />\n        }\n        </Suspense>\n      </>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport AuthContextProvider from './contexts/AuthContext';\nimport CartContextProvider from './contexts/CartContext.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <CartContextProvider>\n      <App />\n    </CartContextProvider>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}